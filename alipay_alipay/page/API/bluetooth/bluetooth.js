Page({
    data:{
        devid:'0D9C82AD-1CC0-414D-9526-119E08D28124',
        serid:'FEE7',
        notifyId:'36F6',
        writeId:'36F5',
        charid:'',
        alldev:[
            {
                deviceId:''
            }
        ]
    },
    openBluetoothAdapter:function(){
        my.openBluetoothAdapter({
            success:(res)=>{
                if(!res.isSupportBLE){
                    my.alert({
                        content:'抱歉，您的手机蓝牙暂不可用'
                    });
                    return;
                }
                my.alert({
                    content:'初始化成功！'
                });
            },
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    closeBluetoothAdapter:function(){
        my.closeBluetoothAdapter({
            success:()=>{my.alert({
                content:'关闭蓝牙成功！'
            })},
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    getBluetoothAdapterState:function(){
        my.getBluetoothAdapterState({
            success:(res)=>{
                if(!res.available){
                    my.alert({
                        content:'抱歉，您的手机蓝牙暂不可用'
                    });
                    return;
                }
                my.alert({
                    content:JSON.stringify(res)
                });
            },
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    startBluetoothDevicesDiscovery:function(){
        my.startBluetoothDevicesDiscovery({
            allowDuplicatesKey:false,
            success:()=>{my.onBluetoothDeviceFound({
                success:(res)=>{
                    var deviceArray = res.devices;
                    for(var i = deviceArray.length - 1;i >= 0;i--){
                        var deviceObj = deviceArray[i];
                        if(deviceObj.name == this.data.name){
                            my.alert({
                                content:'目标设备被找到'
                            });
                            my.offBluetoothDeviceFound();
                            this.setData({
                                deviceId:deviceObj.deviceId
                            });
                            break;
                        }
                    };
                },
                fail:(error)=>{my.alert({
                    content:'监听新设备失败' + JSON.stringify(error)
                })}
            })},
            fail:(error)=>{my.alert({
                content:'启动扫描失败' + JSON.stringify(error)
            })}
        });
    },
    stopBluetoothDevicesDiscovery:function(){
        my.stopBluetoothDevicesDiscovery({
            success:(res)=>{
                my.offBluetoothDeviceFound();
                my.alert({
                    content:'操作成功！'
                });
            },
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    getConnectedBluetoothDevices:function(){
        my.getConnectedBluetoothDevices({
            success:(res)=>{
                if(res.devices.length === 0){
                    my.alert({
                        content:'没有在连接中的设备！'
                    });
                    return;
                }
                my.alert({
                    content:JSON.stringify(res)
                });
                devid = res.devices[0].deviceId;
            },
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    getBluetoothDevices:function(){
        my.getBluetoothDevices({
            success:(res)=>{my.alert({
                content:JSON.stringify(res)
            })},
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    bindKeyInput:function(e){
        this.setData({
            devid:e.detail.value
        });
    },
    connectBLEDevice:function(){
        my.connectBLEDevice({
            deviceId:this.data.devid,
            success:(res)=>{my.alert({
                content:'连接成功'
            })},
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    disconnectBLEDevice:function(){
        my.disconnectBLEDevice({
            deviceId:this.data.devid,
            success:()=>{my.alert({
                content:'断开连接成功！'
            })},
            fail:(error)=>{my.alert({
                content:JSON.stringify(error)
            })}
        });
    },
    getBLEDeviceServices:function(){
        my.getConnectedBluetoothDevices({
            success:(res)=>{
                if(res.devices.length === 0){
                    my.alert({
                        content:'没有已连接的设备'
                    });
                    return;
                }
                my.getBLEDeviceServices({
                    deviceId:this.data.devid,
                    success:(res)=>{
                        my.alert({
                            content:JSON.stringify(res)
                        });
                        this.setData({
                            serid:res.services[0].serviceId
                        });
                    },
                    fail:(error)=>{my.alert({
                        content:JSON.stringify(error)
                    })}
                });
            }
        });
    },
    getBLEDeviceCharacteristics:function(){
        my.getConnectedBluetoothDevices({
            success:(res)=>{
                if(res.devices.length === 0){
                    my.alert({
                        content:'没有已连接的设备'
                    });
                    return;
                }
                this.setData({
                    devid:res.devices[0].deviceId
                });
                my.getBLEDeviceCharacteristics({
                    deviceId:this.data.devid,
                    serviceId:this.data.serid,
                    success:(res)=>{
                        my.alert({
                            content:JSON.stringify(res)
                        });
                        this.setData({
                            charid:res.characteristics[0].characteristicId
                        });
                    },
                    fail:(error)=>{my.alert({
                        content:JSON.stringify(error)
                    })}
                });
            }
        });
    },
    readBLECharacteristicValue:function(){
        my.getConnectedBluetoothDevices({
            success:(res)=>{
                if(res.devices.length === 0){
                    my.alert({
                        content:'没有已连接的设备'
                    });
                    return;
                }
                this.setData({
                    devid:res.devices[0].deviceId
                });
                my.readBLECharacteristicValue({
                    deviceId:this.data.devid,
                    serviceId:this.data.serid,
                    characteristicId:this.data.notifyId,
                    success:(res)=>{my.alert({
                        content:JSON.stringify(res)
                    })},
                    fail:(error)=>{my.alert({
                        content:'读取失败' + JSON.stringify(error)
                    })}
                });
            }
        });
    },
    writeBLECharacteristicValue:function(){
        my.getConnectedBluetoothDevices({
            success:(res)=>{
                if(res.devices.length === 0){
                    my.alert({
                        content:'没有已连接的设备'
                    });
                    return;
                }
                this.setData({
                    devid:res.devices[0].deviceId
                });
                my.writeBLECharacteristicValue({
                    deviceId:this.data.devid,
                    serviceId:this.data.serid,
                    characteristicId:this.data.charid,
                    value:'ABCD',
                    success:(res)=>{my.alert({
                        content:'写入数据成功！'
                    })},
                    fail:(error)=>{my.alert({
                        content:JSON.stringify(error)
                    })}
                });
            }
        });
    },
    notifyBLECharacteristicValueChange:function(){
        my.getConnectedBluetoothDevices({
            success:(res)=>{
                if(res.devices.length === 0){
                    my.alert({
                        content:'没有已连接的设备'
                    });
                    return;
                }
                this.setData({
                    devid:res.devices[0].deviceId
                });
                my.notifyBLECharacteristicValueChange({
                    state:true,
                    deviceId:this.data.devid,
                    serviceId:this.data.serid,
                    characteristicId:this.data.notifyId,
                    success:()=>{
                        my.onBLECharacteristicValueChange({
                            success:(res)=>{my.alert({
                                content:'得到响应数据 = ' + res.value
                            })}
                        });
                        my.alert({
                            content:'监听成功'
                        });
                    },
                    fail:(error)=>{my.alert({
                        content:'监听失败' + JSON.stringify(error)
                    })}
                });
            }
        });
    },
    offBLECharacteristicValueChange:function(){
        my.offBLECharacteristicValueChange();
    },
    bluetoothAdapterStateChange:function(){
        my.onBluetoothAdapterStateChange(this.getBind('onBluetoothAdapterStateChange'));
    },
    onBluetoothAdapterStateChange:function(){
        if(res.error){
            my.alert({
                content:JSON.stringify(error)
            });
        } else {
            my.alert({
                content:'本机蓝牙状态变化：' + JSON.stringify(res)
            });
        }
    },
    offBluetoothAdapterStateChange:function(){
        my.offBluetoothAdapterStateChange(this.getBind('onBluetoothAdapterStateChange'));
    },
    getBind:function(name){
        if(!this[`bind${name}`]){
            this[`bind${name}`] = this[name].bind(this);
        }
        return this[`bind${name}`];
    },
    BLEConnectionStateChanged:function(){
        my.onBLEConnectionStateChanged(this.getBind('onBLEConnectionStateChanged'));
    },
    onBLEConnectionStateChanged:function(res){
        if(res.error){
            my.alert({
                content:JSON.stringify(error)
            });
        } else {
            my.alert({
                content:'连接状态变化：' + JSON.stringify(res)
            });
        }
    },
    offBLEConnectionStateChanged:function(){
        my.offBLEConnectionStateChanged(this.getBind('onBLEConnectionStateChanged'));
    },
    onUnload:function(){
        this.offBLEConnectionStateChanged();
        this.offBLECharacteristicValueChange();
        this.offBluetoothAdapterStateChange();
        this.closeBluetoothAdapter();
    }
});
